---

env:
  - distribution: 'centos'
    version: 7
    run_opts: '--privileged --volume="/sys/fs/cgroup:/sys/fs/cgroup:ro"'
    init: '/usr/lib/systemd/systemd'
  - distribution: 'ubuntu'
    version: 14.04
    run_opts: ''
    init: '/sbin/init'
  - distribution: 'ubuntu'
    version: 16.04
    run_opts: '--privileged --volume="/sys/fs/cgroup:/sys/fs/cgroup:ro"'
    init: '/lib/systemd/systemd'

language: 'python'

python:
  - '2.7'

services:
  - 'docker'

sudo: 'required'

before_install:
  # Pull container
  - 'sudo docker pull ${distribution}:${version}'
  # Customize container
  - 'sudo docker build --rm=true --file=tests/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible tests'

install:
  # Install requirements
  - sudo apt-get update -qq
  - sudo apt-get install -y python-pip
  - sudo pip install ansible
  - sudo ansible-galaxy install -r tests/requirements.yml

  # TODO: Expose rabbitmq port to conatiners with dockerhost option
script:
  - container_id=$(mktemp)
  # Run container in detached state
  - >
    sudo docker run --add-host=docker:`/sbin/ip route|awk '/default/ { print  $3}'` --detach
    --volume=/etc/ansible/roles:/etc/ansible/roles:rw ${run_opts}
    --volume="${PWD}":/etc/ansible/roles/openstack-keystone:rw ${run_opts}
    ${distribution}-${version}:ansible "${init}" > "${container_id}"
  # Install requiremets
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-galaxy install -r /etc/ansible/roles/openstack-keystone/tests/requirements.yml'

  # Ansible syntax check.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/openstack-keystone/tests/test.yml --syntax-check'

  # Test role.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook -vvvv /etc/ansible/roles/openstack-keystone/tests/test.yml'

  # Test role idempotence.
  - >
    sudo docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/openstack-keystone/tests/test.yml
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  # Clean up
  - 'sudo docker stop "$(cat ${container_id})"'

